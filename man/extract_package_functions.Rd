% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complete_dependency_analysis.r
\name{extract_package_functions}
\alias{extract_package_functions}
\title{Extract Functions Used from a Specific Package}
\usage{
extract_package_functions(
  package_name,
  package_path = ".",
  dependency_data = NULL,
  detailed = TRUE
)
}
\arguments{
\item{package_name}{Character. Name of the package to analyze (e.g., "dplyr", "ggplot2")}

\item{package_path}{Character. Path to your package directory (default: ".")}

\item{dependency_data}{List. Pre-computed dependency analysis (optional)}

\item{detailed}{Logical. Return detailed breakdown by file and usage type (default: TRUE)}
}
\value{
List with functions used from the specified package
}
\description{
Analyzes your code to find all functions used from a specific package,
including namespace calls (pkg::func), suspected usage patterns, and more.
}
\examples{
\dontrun{
# Find all dplyr functions used
dplyr_usage <- extract_package_functions("dplyr")

# Find tidyverse functions (note: tidyverse loads multiple packages)
tidyverse_usage <- extract_package_functions("tidyverse")

# Get just the function names
ggplot_funcs <- extract_package_functions("ggplot2", detailed = FALSE)

# Use with pre-computed analysis
deps <- analyze_package_dependencies()
stringr_usage <- extract_package_functions("stringr", dependency_data = deps)
}

}
